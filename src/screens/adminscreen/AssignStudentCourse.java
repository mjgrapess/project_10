/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screens.adminscreen;

import java.sql.Date;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import model.dao.CoursesDAO;
import model.dao.StudentCoursesDAO;
import model.dao.StudentsDAO;
import model.to.CoursesTO;
import model.to.StudentCoursesTO;
import model.to.StudentsTO;
import operations.CommonOperations;
import operations.Validations;

/**
 *
 * @author Grapess
 */
public class AssignStudentCourse extends javax.swing.JInternalFrame {

    private int scid;
    public AssignStudentCourse() {
        initComponents();
        jcbCourse.removeAllItems();
        jcbCourse.addItem("Choose Any Course");
        List<CoursesTO> courses = new CoursesDAO().getAllRecord();
        if (courses != null && courses.size() > 0) {
            for (CoursesTO ct : courses) {
                jcbCourse.addItem(ct);
            }
        }
        jcbStudent.removeAllItems();
        jcbStudent.addItem("Choose Any Student");
        List<StudentsTO> students = new StudentsDAO().getAllRecord();
        if (students != null && students.size() > 0) {
            for (StudentsTO st : students) {
                jcbStudent.addItem(st);
            }
        }
        lblFeeError.setVisible(false);
    }

    public AssignStudentCourse(int scid) {
        this();
        StudentCoursesTO record = new StudentCoursesDAO().getRecord(scid);
        if (record != null) {
            this.scid = scid;
            setTitle("Edit Student Course Details");
            btnAssign.setText("Update Student Course Details");
            fdpStartDate.setDate(record.getStart_date());
            for (int i = 1; i < jcbCourse.getItemCount(); i++) {
                CoursesTO ct = (CoursesTO) jcbCourse.getItemAt(i);
                if (ct.getCourseid().equals(record.getCourseid())) {
                    jcbCourse.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbStudent.getItemCount(); i++) {
                StudentsTO st = (StudentsTO) jcbStudent.getItemAt(i);
                if (st.getStudentid() == record.getStudentid()) {
                    jcbStudent.setSelectedIndex(i);
                    break;
                }
            }
            jtfFee.setText(String.valueOf(record.getFee()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcbCourse = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcbStudent = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jtfFee = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fdpStartDate = new controls.FutureDatePanel();
        btnAssign = new javax.swing.JButton();
        lblFeeError = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Assign Course To Student");

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setText("Choose Course :");

        jcbCourse.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jcbCourse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbCourse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCourseItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel2.setText("Choose Student :");

        jcbStudent.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jcbStudent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel3.setText("Enter Fee :");

        jtfFee.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jtfFee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfFeeKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel4.setText("Choose Start Date :");

        btnAssign.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        btnAssign.setText("Assign Course To Student");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        lblFeeError.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/delete.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                                        .addComponent(jcbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(83, 83, 83)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jcbStudent, 0, 447, Short.MAX_VALUE)
                                            .addComponent(jtfFee))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFeeError))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(44, 44, 44)
                                .addComponent(fdpStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFeeError))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(fdpStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfFeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFeeKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfFeeKeyTyped

    private void jcbCourseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCourseItemStateChanged
        jtfFee.setText("0");
        if (jcbCourse.getSelectedIndex() > 0) {
            CoursesTO ct = (CoursesTO) jcbCourse.getSelectedItem();
            jtfFee.setText(String.valueOf(ct.getCoursefee()));
        }
    }//GEN-LAST:event_jcbCourseItemStateChanged

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        String message = "";
        boolean allvalid = true;
        if (jcbCourse.getSelectedIndex() == 0) {
            message += "Please Choose Any Course\n\n";
            allvalid = false;
        }
        if (jcbStudent.getSelectedIndex() == 0) {
            message += "Please Choose Any Student\n\n";
            allvalid = false;
        }
        String fee = jtfFee.getText().trim();
        if (Validations.isEmpty(fee)) {
            message += "Please Enter Some Value in Fee Box\n\n";
            lblFeeError.setVisible(true);
            lblFeeError.setToolTipText("Please Enter Some Value in Fee Box");
            allvalid = false;
        } else if (Validations.isNumber(fee)) {
            int f = Integer.parseInt(fee);
            if (f <= 0) {
                message += "Fee Cannot be negative or zero\n\n";
                lblFeeError.setToolTipText("Fee Cannot be negative or zer");
                lblFeeError.setVisible(true);
                allvalid = false;
            } else {
                lblFeeError.setVisible(false);
            }
        } else {
            message += "Fee must be a number\n\n";
            lblFeeError.setVisible(true);
            lblFeeError.setToolTipText("Fee must be a number");
            allvalid = false;
        }
        Date start_date = fdpStartDate.getSelectedDate();
        if (start_date == null) {
            message += "Please Choose Any Start Date\n\n";
            allvalid = false;
        }
        if (allvalid) {
            StudentCoursesTO record = new StudentCoursesTO();
            CoursesTO ct = (CoursesTO) jcbCourse.getSelectedItem();
            StudentsTO st = (StudentsTO) jcbStudent.getSelectedItem();
            record.setCourseid(ct.getCourseid());
            record.setStudentid(st.getStudentid());
            record.setFee(Integer.parseInt(fee));
            record.setStart_date(start_date);
            StudentCoursesDAO action = new StudentCoursesDAO();
            if (btnAssign.getText().contains("Assign")) {
                if (action.insertRecord(record)) {
                    message = "Course is Assigned To Student";
                    bonus_action();
                } else {
                    message = "Insertion Failure Due To " + action.getError_message();
                    allvalid = false;
                }
            } else if (btnAssign.getText().contains("Update")) {
                record.setScid(scid);
                if (action.updateRecord(record)) {
                    message = "Student Course Details is Updated";
                    bonus_action();
                } else {
                    message = "Updation Failure Due To " + action.getError_message();
                    allvalid = false;
                }
                CommonOperations.showInternalFrame(getDesktopPane(), new ViewStudentCourses());
                dispose();
            } else {
                message = "Invalid Operations";
            }
        }
        if (allvalid) {
            JOptionPane.showMessageDialog(this, message);
        } else {
            JOptionPane.showMessageDialog(this, message, "Some Failure", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void bonus_action() {
        JInternalFrame[] all_frames = getDesktopPane().getAllFrames();
        if (all_frames != null && all_frames.length > 0) {
            for (JInternalFrame jif : all_frames) {
                if (jif instanceof ViewStudentCourses) {
                    ViewStudentCourses vsc = (ViewStudentCourses) jif;
                    vsc.bindTableDetails();
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private controls.FutureDatePanel fdpStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox jcbCourse;
    private javax.swing.JComboBox jcbStudent;
    private javax.swing.JTextField jtfFee;
    private javax.swing.JLabel lblFeeError;
    // End of variables declaration//GEN-END:variables
}
